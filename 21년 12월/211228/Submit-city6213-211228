import java.util.Scanner;

public class Main {
	static int answer = 0;
	static int N, M;
	static int[][] map;
	static int[] dx = { -1, 0, 1, 0 }; // 북,동,서,남
	static int[] dy = { 0, 1, 0, -1 };

	public static void DFS(int r, int c, int d) {

		if (map[r][c] == 0) {
			answer++;
			map[r][c] = 2;
		}
		
		
		for (int i = 1; i <= 4; i++) {
			d = (d + 3) % 4;
			int nx = r + dx[d];
			int ny = c + dy[d];
			if (nx > 0 && nx < N - 1 && ny > 0 && ny < M - 1) {
				if (map[nx][ny] == 0) {
					DFS(nx, ny, d);
					return;
				}
			}

		}
		
		

		int tempDirection = (d + 2) % 4;
		int nx = r + dx[tempDirection];
		int ny = c + dy[tempDirection];

		if (nx > 0 && nx < N - 1 && ny > 0 && ny > 0 && ny < M - 1 && map[nx][ny] != 1) {
			DFS(nx, ny, d);
		}

	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		M = sc.nextInt();
		int r = sc.nextInt();
		int c = sc.nextInt();
		int d = sc.nextInt();
		map = new int[N][M];

		for (int i = 0; i < N; i++) {
			for (int j = 0; j < M; j++) {
				map[i][j] = sc.nextInt();
			}
		}

		DFS(r, c, d);
		System.out.println(answer);

	}
}
